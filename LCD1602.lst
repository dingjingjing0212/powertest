C51 COMPILER V9.00   LCD1602                                                               01/29/2018 17:41:56 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN LCD1602.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD1602\LCD1602.c BROWSE DEBUG OBJECTEXTEND PRINT(.\LCD1602.lst) OBJECT(LCD
                    -1602.obj)

line level    source

   1          #include "LCD1602.h"
   2          
   3          //(0, 0)--------------(15, 0)
   4          //(0, 1)--------------(15, 1)
   5          
   6          void LCD_WriteReg(bit RegType, unsigned char RegValue)
   7          {
   8   1              LCD_RS = RegType;
   9   1              LCD_RW = 0;
  10   1              LCD_EN = 1;
  11   1              P2 = RegValue;
  12   1              LCD_EN = 0;
  13   1      }
  14          
  15          unsigned char LCD_ReadReg(bit RegType)
  16          {
  17   1              unsigned char RegValue;
  18   1      
  19   1              LCD_RS = RegType;
  20   1              LCD_RW = 1;
  21   1              P2 = 0xFF;                                                                                                      //Write "1" before read.
  22   1              LCD_EN = 1;
  23   1              RegValue = P2;
  24   1              LCD_EN = 0;
  25   1      
  26   1              return RegValue;
  27   1      }       
  28          
  29          void LCD_Init(void)
  30          {
  31   1              Delay_us(10000);                                                                                //Power on reset. No display.
  32   1      
  33   1              LCD_WriteReg(INST_REG, 0x38);
  34   1              Delay_us(4000);
  35   1              LCD_WriteReg(INST_REG, 0x38);
  36   1              Delay_us(80);
  37   1              LCD_WriteReg(INST_REG, 0x38);                           //Set to 8-bit operation and select 2-line display line and 5 x 8 dot ch
             -aracter font.
  38   1      
  39   1              while(LCD_BUSY);
  40   1              LCD_WriteReg(INST_REG, 0x08);                           //Display off
  41   1              while(LCD_BUSY);
  42   1              LCD_WriteReg(INST_REG, 0x01);                           //Display clear
  43   1              while(LCD_BUSY);
  44   1              LCD_WriteReg(INST_REG, 0x06);                           //Entry mode set
  45   1              while(LCD_BUSY);
  46   1              LCD_WriteReg(INST_REG, 0x0C);                           //Display on. Cursor off. Blinks off.
  47   1      }
  48          
  49          
  50          void SetCoordinate(unsigned char x, unsigned char y)
  51          {//DB[7:0]-1aaaaaaa, 
  52   1              unsigned char RAM_Addr;
  53   1      
C51 COMPILER V9.00   LCD1602                                                               01/29/2018 17:41:56 PAGE 2   

  54   1              if(y)
  55   1                      RAM_Addr = x | 0xC0;                                                    //aaaaaaa: 40H - 67H for the second line. 0x40 | 0x80 = 0xC0
  56   1              else
  57   1                      RAM_Addr = x | 0x80;                                                    //aaaaaaa: 00H - 27H for the first line.
  58   1              while(LCD_BUSY);
  59   1              LCD_WriteReg(INST_REG, RAM_Addr);               //Set display data RAM address
  60   1      }
  61          
  62          void PrintChar(unsigned char x, unsigned char y, unsigned char Character)
  63          {
  64   1              if(x<16 && y<2)
  65   1              {
  66   2                      SetCoordinate(x, y);
  67   2                      while(LCD_BUSY);
  68   2                      LCD_WriteReg(DATA_REG, Character);
  69   2              }
  70   1      }
  71          
  72          void PrintStr(unsigned char x, unsigned char y, unsigned char* Str)
  73          {
  74   1              unsigned char Idx = 0;
  75   1      
  76   1              SetCoordinate(x, y);
  77   1              while(Str[Idx] != 0)
  78   1              {
  79   2                      while(LCD_BUSY);
  80   2                      LCD_WriteReg(DATA_REG, Str[Idx]);
  81   2                      if(x + Idx < 15)
  82   2                              Idx++;
  83   2                      else
  84   2                              break;
  85   2              }
  86   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    315    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
